###########################################################
# This Blueprint installs the Postgres Database
# on an openstack cloud environment.
###########################################################

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2m8/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2m8/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.2m8/plugin.yaml
  - https://raw.githubusercontent.com/kemiz/monitored-server-cfy3/master/types/monitored-server-types.yaml
  - types/postgres.yaml
  
inputs:

  image:
    description: >
      Image to be used when launching agent VM's

  flavor:
    description: >
      Flavor of the agent VM's

  agent_user:
    description: >
      User for connecting to agent VM's

node_templates:

  postgres_host:
    type: monitoredhosts.openstack.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Attaching the mongo security group to the mongo host
      ###########################################################

      - target: postgres_security_group
        type: cloudify.openstack.server_connected_to_security_group

  postgres:
    type: postgres.nodes.PostgresSQL
    properties:
      port: 27017
    interfaces:
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                MongoDBCollector:
                  config:
                    hosts: "localhost:27017"
    relationships:
      - type: cloudify.relationships.contained_in
        target: postgres_host

  ###########################################################
  # A security group to enable access to the mongo host
  # using the port of the mongo node.
  #
  # We need this so that the nodecellar application can
  # comminicate with MongoDB, since they are running on
  # different hosts.
  ###########################################################

  postgres_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: postgres_security_group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ postgres, port ] }
        - remote_ip_prefix: 0.0.0.0/0
          port: 28017
